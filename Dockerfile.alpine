ARG IMAGE_VERSION="alpine:3"

# PRE-IMAGE
FROM golang:alpine AS pre

ARG NOMAD_VERSION="1.2.4"

# https://www.nomadproject.io/docs/install#from-source
# OPTIONAL: go build -x -o /srv/exports/nomad -tags "nonvidia release ui" --ldflags '-linkmode external -extldflags "-static"' .
RUN set -ex \
  && apk --no-cache add ca-certificates git make bash g++ linux-headers musl \
  && rm -rf /var/cache/apk/* \
  && mkdir -p /srv/exports \
  && mkdir -p $GOPATH/src/github.com/hashicorp \
  && cd $_ \
  && git clone -c advice.detachedHead=false --depth 1 --branch v${NOMAD_VERSION} https://github.com/hashicorp/nomad.git \
  && cd nomad \
  && make bootstrap \
  && make dev \
  && mv /go/bin/nomad /srv/exports/

# RUNTIME IMAGE
FROM ${IMAGE_VERSION}

ENV NOMAD_ADDR="http://127.0.0.1:4646"
ENV NOMAD_TOKEN=

# INSTALL PACKAGES
RUN set -ex \
  && apk --no-cache add ca-certificates git dumb-init su-exec \
  && rm -f /var/cache/apk/*

# CREATE NON-PRIVILEGED USER
RUN set -ex \
  && addgroup nomad \
  && adduser -g "Nomad User" -DG "nomad" nomad

# ADD EXTERNAL RESOURCES
COPY --from=pre ["/srv/exports/nomad", "/usr/local/bin/"]

# CREATE STARTUP LOGIC
COPY --chmod="755" ["scripts/alpine-entrypoint.sh", "/usr/local/bin/docker-entrypoint.sh"]
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["nomad","version"]
